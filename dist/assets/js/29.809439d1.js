(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{310:function(_,v,t){"use strict";t.r(v);var a=t(14),s=Object(a.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[_._v("#")]),_._v(" 函数")]),_._v(" "),v("h2",{attrs:{id:"一-简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一-简介"}},[_._v("#")]),_._v(" 一.简介")]),_._v(" "),v("p",[_._v("通过函数你可以调用词库的其他方法。")]),_._v(" "),v("p",[_._v("将公共的部分抽成函数，有助于结构化你的词库。")]),_._v(" "),v("h2",{attrs:{id:"二-格式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二-格式"}},[_._v("#")]),_._v(" 二. 格式")]),_._v(" "),v("p",[v("code",[_._v("$函数名 函数参数$")])]),_._v(" "),v("p",[_._v("这里的函数参数不止一个，以空格来区分。")]),_._v(" "),v("p",[_._v("函数的参数可以为以下结构:")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("纯文本，例如"),v("code",[_._v("$函数名 123$")])])]),_._v(" "),v("li",[v("p",[_._v("表达式，此时会传入表达式代表的对象。例如"),v("code",[_._v("$函数名 {A}$")])])]),_._v(" "),v("li",[v("p",[_._v("计算结果，例如"),v("code",[_._v("$函数名 [1+2{A}]$")])]),_._v(" "),v("blockquote",[v("p",[_._v("注:")]),_._v(" "),v("p",[_._v("由于fastjson2本身特性，纯加减无花括号求值的表达式会被解析成json数组，如:")]),_._v(" "),v("p",[_._v("[1+1+1-2-2]会被解析成[1,1,1,-2,-2]而不是-1")]),_._v(" "),v("p",[_._v("为了避免此种情况发生，请在其中一个因数后加上*1，例如:")]),_._v(" "),v("p",[_._v("[1+1+1-2-2*1]")]),_._v(" "),v("p",[_._v("或者")]),_._v(" "),v("p",[_._v("[1+1+1-2-2+{A}]")])])]),_._v(" "),v("li",[v("p",[_._v("JSON字符串，此时将会转换为集合，例如"),v("code",[_._v('$函数名 {"1":2}$')]),_._v("或"),v("code",[_._v("$函数名 [1,2,3,4,5]$")])])])]),_._v(" "),v("h2",{attrs:{id:"三-标准函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三-标准函数"}},[_._v("#")]),_._v(" 三. 标准函数")]),_._v(" "),v("p",[_._v("SeikoDIC会附带一个内置的，无视各类平台的全局函数表，有关于此类函数，请点击下列链接查询。")]),_._v(" "),v("p",[_._v("https://github.com/SeikoDictionaryEngineV2/base_command")])])}),[],!1,null,null,null);v.default=s.exports}}]);